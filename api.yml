openapi: 3.0.0

info:
  title: Drop
  description: A self-hosted, end-to-end encrypted personal file sharing service
  version: 0.1.0

servers:
  - url: http://localhost:8080/api/v1
    description: Development server

paths:
  /archives:
    get:
      summary: List all archives.
      security:
        - AdminAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ArchiveResponse"
    post:
      summary: Create an archive.
      security:
        - AdminAuth: []
      requestBody:
        required: true
        content:
           application/json:
             schema:
               $ref: "#/components/schemas/ArchiveRequest"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArchiveResponse"
    delete:
      summary: Delete an archive.
      security:
        - AdminAuth: []
      responses:
        "200":
          description: Deleted
        "404":
          description: Not found

  /archives/{archiveId}/tokens:
    post:
      summary: Create a token for an archive.
      security:
        - AdminAuth: []
      parameters:
        - $ref: "#/components/parameters/ArchiveId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TokenRequest"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
        "404":
          description: Not found
    delete:
      summary: Delete a token for an archive.
      security:
        - AdminAuth: []
      parameters:
        - $ref: "#/components/parameters/ArchiveId"
      respones:
        "200":
          description: Deleted

  /archives/{archiveId}/files:
    get:
      summary: Retrieve all files for an archive.
      security:
        - AdminAuth: []
      parameters:
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FileResponse"
        "404":
          description: Not found
    post:
      summary: Create a file.
      security:
        - ArchiveAuth: []
      parameters:
        - $ref: "#/components/parameters/ArchiveId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FileRequest"
        responses:
          "201":
            description: Created
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/FileResponse"
          "403":
            description: Forbidden
          "404":
            description: Not found
  /archives/{archiveId}/files/{fileId}:
    get:
      summary: Retrieve a file.
      security:
        - AdminAuth: []
      parameters:
        - $ref: "#/components/parameters/ArchiveId"
        - $ref: "#/components/parameters/FileId"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileResponse"
    post:
      summary: Upload bytes of a file.
      security:
        - ArchiveAuth: []
      parameters:
        - $ref: "#/components/parameters/ArchiveId"
        - $ref: "#/components/parameters/FileId"
        - in: header
          name: Content-Range
          type: string
          required: false
          description: The range of bytes to write. If not specified, the entire file is expected to be sent in the body. The body may be streamed over time.
      requestBody:
        required: true
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        "201":
          description: Created
    delete:
      summary: Delete a file.
      security:
        - AdminAuth: []
      parameters:
        - $ref: "#/components/parameters/ArchiveId"
        - $ref: "#/components/parameters/FileId"
      responses:
        "200":
          description: Deleted


components:
  schemas:
    ArchiveRequest:
      type: object
      properties:
        name:
          type: string
          description: Name of the archive.
        maximumFileCount:
          type: number
          description: The maximum number of files allowed to be uploaded. Use 0 to allow any count.
        maximumFileSize:
          type: number
          description: The maximum size of an uploaded file. Use 0 to allow any size.
        maximumSize:
          type: number
          description: The total maximum size of the uploaded files. use 0 to allow any size.

    ArchiveResponse:
      type: object
      properties:
        id:
          type: string
        created:
          type: number
          description: The UTC timestamp at which the archive was created.
        name:
          type: string
          description: Name of the archive.
        maximumFileCount:
          type: number
          description: The maximum number of files allowed to be uploaded. Use 0 to allow any count.
        maximumFileSize:
          type: number
          description: The maximum size of an uploaded file. Use 0 to allow any size.
        maximumSize:
          type: number
          description: The total maximum size of the uploaded files. use 0 to allow any size.
        files:
          type: array
          items:
            $ref: "#/components/schemas/FileResponse"

    TokenRequest:
      type: object
      properties:
        lifetime:
          type: number
          description: The number of seconds the token should be valid.

    TokenResponse:
      type: object
      properties:
        id:
          type: string
        created:
          type: number
          description: The UTC timestamp at which the token was created.
        token:
          type: string
          description: Token with upload access to the archive.

    FileRequest:
      type: object
      properties:
        name:
          type: string
          description: Name of the file.
        lastModified:
          type: number
          description: The UTC timestamp when the file was last modified.
        size:
          type: number
          description: Size in bytes.
        mime:
          type: string
          description: The MIME type of the file.
        nonce:
          type: string
          description: Hex-encoded nonce used for encryption.

    FileResponse:
      type: object
      properties:
        id:
          type: string
          description: "The created file's id, used for the upload"
        created:
          type: number
          description: The UTC timestamp at which the file was created.
        name:
          type: string
          description: Name of the file.
        lastModified:
          type: number
          description: The UTC timestamp when the file was last modified.
        size:
          type: number
          description: Size in bytes.
        mime:
          type: string
          description: The MIME type of the file.
        nonce:
          type: string
          description: Hex-encoded nonce used for encryption.

  parameters:
    ArchiveId:
      in: path
      name: archiveId
      schema:
        type: string
      required: true
      description: The id of the target archive.

    FileId:
      in: path
      name: fileId
      schema:
        type: string
      required: true
      description: The id of the target file.

  securitySchemes:
    ArchiveAuth:
      type: http
      scheme: bearer
      description: Authentication for a specific archive.
    AdminAuth:
      type: http
      scheme: bearer
      description: Authentication for an admin.
